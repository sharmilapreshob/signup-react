{"ast":null,"code":"var _jsxFileName = \"/Users/sharmilapreshob/Documents/GitHub/signup-react/src/App.js\";\nimport React, { Component } from 'react';\nimport PasswordMeter from './components/PasswordMeter';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.isEmail = e => {\n      const value = e.target.value;\n      let emailValid = this.state.emailValid;\n      this.setState({\n        email: value\n      });\n      emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n\n      if (emailValid) {\n        this.setState({\n          emailValid: true,\n          emailError: ''\n        });\n      } else {\n        this.setState({\n          emailValid: true,\n          emailError: 'Please enter a valid email id'\n        });\n      }\n    };\n\n    this.state = {\n      password: '',\n      email: '',\n      emailValid: false,\n      emailError: ''\n    };\n  }\n\n  render() {\n    const password = this.state.password;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Registration Form\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: this.isEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.emailError), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"div\", {\n      className: \"meter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      autoComplete: \"off\",\n      type: \"password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(PasswordMeter, {\n      password: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn-submit\",\n      type: \"submit\",\n      id: \"signUp\",\n      name: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sharmilapreshob/Documents/GitHub/signup-react/src/App.js"],"names":["React","Component","PasswordMeter","App","constructor","isEmail","e","value","target","emailValid","state","setState","email","match","emailError","password","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAO,WAAP;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,OATc,GASHC,CAAD,IAAO;AACb,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA5B;AACA,WAAKE,QAAL,CAAc;AAACC,QAAAA,KAAK,EAACL;AAAP,OAAd;AACAE,MAAAA,UAAU,GAAGF,KAAK,CAACM,KAAN,CAAY,sCAAZ,CAAb;;AAEA,UAAIJ,UAAJ,EAAgB;AACb,aAAKE,QAAL,CAAc;AAACF,UAAAA,UAAU,EAAE,IAAb;AAAmBK,UAAAA,UAAU,EAAE;AAA/B,SAAd;AACD,OAFF,MAGM;AACH,aAAKH,QAAL,CAAc;AAACF,UAAAA,UAAU,EAAE,IAAb;AAAmBK,UAAAA,UAAU,EAAE;AAA/B,SAAd;AACD;AACH,KArBW;;AAEZ,SAAKJ,KAAL,GAAa;AACXK,MAAAA,QAAQ,EAAE,EADC;AAEXH,MAAAA,KAAK,EAAE,EAFI;AAGXH,MAAAA,UAAU,EAAE,KAHD;AAIXK,MAAAA,UAAU,EAAE;AAJD,KAAb;AAMD;;AAeDE,EAAAA,MAAM,GAAG;AAAA,UACCD,QADD,GACc,KAAKL,KADnB,CACCK,QADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,EAAE,EAAC,OAApC;AACA,MAAA,QAAQ,EAAE,KAAKV,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAME;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKK,KAAL,CAAWI,UAAnC,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,YAAY,EAAC,KAApB;AAA0B,MAAA,IAAI,EAAC,UAA/B;AAA0C,MAAA,QAAQ,EAAER,CAAC,IAAI,KAAKK,QAAL,CAAc;AAAEI,QAAAA,QAAQ,EAAET,CAAC,CAACE,MAAF,CAASD;AAArB,OAAd,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEQ,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,EAYE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAA8C,MAAA,EAAE,EAAC,QAAjD;AAA0D,MAAA,IAAI,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CADA,CADF;AAkBD;;AA5CyB;;AA+C5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport PasswordMeter from './components/PasswordMeter';\nimport './App.css'\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      password: '',\n      email: '',\n      emailValid: false,\n      emailError: ''\n    }\n  }\n  isEmail = (e) => {\n      const value = e.target.value;\n      let emailValid = this.state.emailValid;\n      this.setState({email:value});\n      emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n\n      if (emailValid) {\n         this.setState({emailValid: true, emailError: ''});\n       }\n       else {\n         this.setState({emailValid: true, emailError: 'Please enter a valid email id'});\n       }\n    }\n\n  render() {\n    const { password } = this.state;\n    return (\n      <div className=\"App\">\n      <form className=\"form\">\n        <h2>Registration Form</h2>\n        <label>Email</label>\n        <input type=\"email\" name=\"email\" id=\"email\"\n        onChange={this.isEmail}\n        />\n        <div className=\"error\">{this.state.emailError}</div>\n        <label>Password</label>\n        <div className=\"meter\">\n          <input autoComplete=\"off\" type=\"password\" onChange={e => this.setState({ password: e.target.value })} />\n          <PasswordMeter password={password} />\n        </div>\n        <button className=\"btn-submit\"  type=\"submit\" id=\"signUp\" name=\"button\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}